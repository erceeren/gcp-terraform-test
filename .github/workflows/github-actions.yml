name: Test action for CI/CD with terraform
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: ["main"]
jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
            create_credentials_file: true
            workload_identity_provider: 'projects/shooter-game-400216/locations/global/workloadIdentityPools/ci-cd/providers/github'
            service_account: 'ci-cd-service@shooter-game-400216.iam.gserviceaccount.com'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Get the output of the Terraform configuration
        id: terraform_output
        run: terraform output -json
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Echo secrets
        run: |
          terraform output private_key > ssh_key.pem
          echo "[all]" >> hosts
          echo $(terraform output instance_ip) >> hosts
          echo "" >> hosts
          echo "[all:vars]" >> hosts
          echo "ansible_user=ssh_user" >> hosts
          echo "ansible_ssh_private_key_file=ssh_key.pem" >> hosts
          chmod 0600 ssh_key.pem
        shell: bash
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible.yml
          options: |
            --inventory hosts
      